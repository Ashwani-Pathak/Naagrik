// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  username        String
  email           String   @unique
  password        String
  role            Role     @default(USER)
  avatar          String?
  description     String?
  contact         String?
  issuesReported  Int      @default(0)
  issuesResolved  Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  issues   Issue[]
  comments Comment[]

  @@map("users")
}

model Issue {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  category    String
  photo       String?
  location    Location
  status      IssueStatus @default(OPEN)
  upvotes     Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  createdBy   String   @db.ObjectId
  user        User     @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  comments    Comment[]

  @@map("issues")
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  createdAt DateTime @default(now())

  // Relations
  createdBy String @db.ObjectId
  user      User   @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  issueId   String @db.ObjectId
  issue     Issue  @relation(fields: [issueId], references: [id], onDelete: Cascade)

  @@map("comments")
}

// Embedded types
type Location {
  lat Float
  lng Float
}

// Enums
enum Role {
  USER
  ADMIN
}

enum IssueStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
}
